{"version":3,"sources":["components/Gold.js","components/AddTask.js","components/Task.js","components/Tasks.js","components/AddCategory.js","components/Category.js","components/Categories.js","components/AddGoal.js","components/Goal.js","components/Goals.js","firebase/firebase.js","components/Header.js","components/Today.js","components/NavBar.js","components/EditTask.js","components/EditTaskModal.js","components/EditGoal.js","components/EditGoalModal.js","components/TodayNav.js","components/Week.js","components/ImportExport.js","components/GoBitsApp.js","components/Landing.js","App.js","serviceWorker.js","index.js"],"names":["Gold","props","goldAmount","AddTask","state","error","undefined","selectedCategory","handleAddTask","e","preventDefault","date","focusedDate","task","target","elements","value","trim","goal","goals","goalId","setState","handleChangeCategory","category","this","onSubmit","type","name","className","React","Component","Task","thumbsUpClassNames","completedAt","join","thumbsDownClassNames","newDate","moment","add","format","style","borderBottomColor","color","title","display","onClick","console","log","handleCheck","id","handleThumbsDown","rejectedCount","handleDeleteTask","handleFocusTask","handleUpdateTask","displayBumpArrow","Tasks","tasks","map","t","i","key","getTaskColor","displayTasks","AddCategory","handleAddCategory","Category","changeFocusedCategory","focusedCategory","handleDeleteCategory","Categories","categories","c","AddGoal","handleAddGoal","Goal","changeFocusedGoal","addClassNames","classNameArray","push","focusedGoal","abbrevCode","includes","handleDeleteGoal","handleFocusEditGoal","Goals","o","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","googleAuthProvider","GoogleAuthProvider","Header","subtitle","user","auth","signOut","Today","current","NavBar","handleChangeView","view","changeView","EditTask","selectedGoal","taskId","editTask","handleClearFocusedTask","handleChangeGoal","getEditTaskCategory","defaultGoal","filter","g","goalid","prevState","defaultValue","onChange","length","displayCategoriesList","displayGoalsList","EditTaskModal","isOpen","focusedTask","contentLabel","onRequestClose","closeTimeoutMS","handleUpdateFocusedEditGoal","focusedEditGoal","categoryId","handleClearFocusedEditGoal","EditGoalModal","TodayNav","handleChangeFocusDate","handleTodayDate","handleNextDate","handlePreviousDate","subtract","handleChangeGoalsFilter","categoryTitle","Week","filteredTodaysTasks","dayComponents","currentDate","displayTodays","ImportExport","href","data","JSON","stringify","currentState","encodeURI","packageData","download","Date","toISOString","slice","reader","FileReader","readAsText","files","onload","text","result","handleImportState","GoBitsApp","setSubtitle","randomNum","Math","floor","random","messages","message","index","uuidv4","concat","createdAt","split","prevStateCopy","x","forEach","updatingGoal","setGoalStatus","goalStatus","goalsPerTask","currentValue","taskDate","taskDeleteIndex","findIndex","splice","goalDeleteIndex","categoryDeleteIndex","g2","filteredGoals","filteredTasks","err","displayGoals","displayDashboard","displayWeek","displayToday","parse","displayCurrentView","bind","emptyState","email","ref","uid","once","then","snapshot","val","catch","set","currentView","Landing","currentGoalIndex","timer","getNewIndex","handleLogin","signInWithPopup","intervalId","setInterval","clearInterval","history","createHistory","App","path","component","exact","render","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","hasRendered","renderApp","ReactDOM","document","getElementById","onAuthStateChanged","pathname","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.42b5a23f.chunk.js","sourcesContent":["import React from 'react'\n\nconst Gold = (props) =>{\n  return (\n    <div>\n      <p>Gold amount {props.goldAmount}</p>\n    </div>\n  );\n}\n\nexport default Gold\n","import React from 'react'\nimport moment from 'moment'\n\nexport default class AddTask extends React.Component {\n  state = {\n    error: undefined,\n    selectedCategory: \"uncategorized\"\n  }\n  handleAddTask = (e) => {\n    e.preventDefault()\n    const defaultDate = this.props.focusedDate\n    //|| moment().format(\"YYYY-MM-DD\");\n    //const date = (this.props.display === \"today\" || this.props.display === \"week\") ? defaultDate : \"\";\n    const date = defaultDate;\n    \n    const task = e.target.elements.task.value.trim();\n    const goal = e.target.elements.goals ? e.target.elements.goals.value : this.props.goalId;\n    const error = this.props.handleAddTask(task, date, goal);\n    this.setState(() => {\n      return { error };\n    });\n    if (!error){\n      e.target.elements.task.value = '';\n    };\n  }\n  handleChangeCategory = (e) => {\n    const category = e.target.value;\n    this.setState(() => ({selectedCategory: category}))\n  }\n  render(){\n    const displayCategoriesList = () => {\n\n      const categories = this.props.categories.map((category) => {\n        return(\n         <option key={category.id} value={category.id}>{category.title}</option>\n       )\n      });\n      return (\n        <div className=\"assign\">\n          <select name=\"categories\" onChange={this.handleChangeCategory}>\n            {\n              categories.length > 0 ? categories : <option value=\"uncategorized\">Uncategorized</option>\n            }\n          </select>\n          <label className=\"assign__label\">Category</label>\n        </div>\n      )\n\n    }\n    const displayGoalsList = () => {\n\n      const category = this.state.selectedCategory;\n      const goals = this.props.goals.map((goal) => {\n        if (goal.category === category)\n        return(\n         <option key={goal.id} value={goal.id}>{goal.title}</option>\n       )\n      });\n      return (\n        <div className=\"assign\">\n\n          <select name=\"goals\">\n            {\n              goals.length > 0 ? goals : <option value=\"uncategorized-goal\">Uncategorized</option>\n            }\n\n          </select>\n          <label className=\"assign__label\">Goal</label>\n        </div>\n      )\n\n    }\n    return (\n      <div>\n        {this.state.error && <p>{this.state.error}</p>}\n      <form onSubmit={this.handleAddTask}>\n        <input type=\"text\" name=\"task\"/>\n        <button><span className=\"fa fa-plus\"/></button>\n      </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport moment from 'moment'\n\nconst Task = (props) => {\n  const thumbsUpClassNames = [\"fa\", \"fa-thumbs-up\", !props.task.completedAt ? \"notCompletedThumbsUp\" : \"completedThumbsUp\"].join(\" \")\n  const thumbsDownClassNames = [\"fa\", \"fa-thumbs-down\", !props.task.completedAt ? \"notCompletedThumbsDown\" : \"completedThumbsDown\"].join(\" \")\n  const goalId = props.goalId ? props.goalId : undefined;\n  const newDate = moment().add(1, \"days\").format(\"YYYY-MM-DD\");\n\n  const displayBumpArrow = () => {\n    if (!props.task.completedAt && moment(props.task.date) <= moment()){\n      return(\n        <span className=\"fa fa-arrow-right\"\n          onClick={(e) => {\n            props.handleUpdateTask(props.task.id, props.task.title, newDate, props.task.goal);\n          }}\n        />\n      )\n    }\n  }\n  const borderColor = props.color ? props.color : \"#fc846b\"\n\n  const style = {\n    borderBottomColor: borderColor\n  }\n  return (\n    <li className={!props.task.completedAt ? \"notCompleted task\" : \"completed task\"} style={style}>\n      <div>\n        {props.task.title}\n        {props.display === \"dashboard\" && props.task.date}\n      </div>\n      <div>\n      <span className={thumbsUpClassNames}\n        onClick={(e) => {\n          console.log(\"handle check\")\n          props.handleCheck(props.task.id, goalId)\n        }}\n      />\n      <span className={thumbsDownClassNames}\n        onClick={(e) => {\n          console.log(\"handle uncheck\")\n          props.handleThumbsDown(props.task.id, goalId)\n        }}\n      >{props.task.rejectedCount}</span>\n\n      <span className=\"fa fa-trash\"\n        onClick={(e) => {\n          props.handleDeleteTask(props.task.id, goalId);\n        }}\n      />\n      <span className=\"fa fa-edit\"\n        onClick={(e) => {\n          props.handleFocusTask(props.task.id);\n        }}\n      />\n      {displayBumpArrow()}\n      </div>\n    </li>\n  );\n};\n\nexport default Task;\n","import React from 'react'\nimport Task from './Task'\n\nexport default class Tasks extends React.Component {\n  render(){\n    const displayTasks = () => {\n      if (this.props.tasks){\n        const tasks = this.props.tasks.map((t, i) => {\n          return(\n              <Task\n              key={t.id}\n              task={t}\n              goalId={this.props.goalId}\n              handleCheck={this.props.handleCheck}\n              handleDeleteTask={this.props.handleDeleteTask}\n              handleThumbsDown={this.props.handleThumbsDown}\n              handleFocusTask={this.props.handleFocusTask}\n              handleUpdateTask={this.props.handleUpdateTask}\n              display={this.props.display}\n              color={this.props.getTaskColor(t)}\n            />\n          );\n      });\n      return tasks\n    }\n  };\n\n    return (\n      <div>\n        <h2>(Ha)bits</h2>\n        {displayTasks()}\n      </div>\n    );\n  }\n}\n","import React from 'react'\n\nexport default class AddCategory extends React.Component {\n  state = {\n    error: undefined\n  }\n  handleAddCategory = (e) => {\n    e.preventDefault()\n    const category = e.target.elements.category.value.trim();\n    const error = this.props.handleAddCategory(category);\n    this.setState(() => {\n      return { error };\n    });\n    if (!error){\n      e.target.elements.category.value = '';\n    };\n  }\n  render(){\n    return (\n      <div>\n        {this.state.error && <p>{this.state.error}</p>}\n      <form onSubmit={this.handleAddCategory}>\n        <input type=\"text\" name=\"category\"/>\n        <button><span className=\"fa fa-plus\"/></button>\n      </form>\n      </div>\n    );\n  }\n}\n","import React from 'react'\n\nexport default class Category extends React.Component {\n  changeFocusedCategory = () => {\n    this.props.changeFocusedCategory(this.props.category.id)\n  };\n  render(){\n    return (\n      <li className={this.props.category.id === this.props.focusedCategory ? \"selected\" : null}><a onClick={this.changeFocusedCategory}>{this.props.category.title}</a>\n        {this.props.category.id !== 'uncategorized' && <span className=\"fa fa-trash\"\n          onClick={(e) => {\n            this.props.handleDeleteCategory(this.props.category.id);\n          }}\n        />}\n      </li>\n    );\n  }\n}\n","import React from 'react'\nimport Category from './Category'\nexport default class Categories extends React.Component {\n  render(){\n    return (\n      <div>\n        <h2>Categories</h2>\n        <ul>\n        {this.props.categories.map((c,i) => { return <Category\n          key={c.id}\n          category={c}\n          focusedCategory={this.props.focusedCategory}\n          changeFocusedCategory={this.props.changeFocusedCategory}\n          handleDeleteCategory={this.props.handleDeleteCategory}\n        />})}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from 'react'\n\nexport default class AddGoal extends React.Component {\n  state = {\n    error: undefined\n  }\n  \n  handleAddGoal = (e) => {\n    e.preventDefault()\n    const date = e.target.elements.date.value\n    const goal = e.target.elements.goal.value.trim();\n    const error = this.props.handleAddGoal(goal, date, this.props.category);\n    this.setState(() => {\n      return { error };\n    });\n    if (!error){\n      e.target.elements.goal.value = '';\n    };\n  }\n  render(){\n    return (\n      <div>\n        {this.state.error && <p>{this.state.error}</p>}\n      <form onSubmit={this.handleAddGoal}>\n        <input type=\"text\" name=\"goal\"/>\n        <input type=\"date\" name=\"date\"/>\n        <button><span className=\"fa fa-plus\"/></button>\n      </form>\n      </div>\n    );\n  }\n}\n","import React from 'react'\n\nexport default class Goal extends React.Component {\n  changeFocusedGoal = () => {\n    this.props.changeFocusedGoal(this.props.goal.id)\n  };\n  addClassNames = () => {\n    let classNameArray = []\n    classNameArray.push(!this.props.goal.completedAt ? \"notCompleted\" : \"completed\");\n    classNameArray.push(this.props.goal.id === this.props.focusedGoal ? \"selected\" : null);\n    return classNameArray.join(' ');\n  };\n  render(){\n    const borderColor = this.props.goal.color ? this.props.goal.color : \"#fc846b\"\n\n    const style = {\n      borderBottomColor: borderColor\n    }\n\n    return (\n      <li className={this.addClassNames()} style={style}>\n        <a onClick={this.changeFocusedGoal}>{this.props.goal.abbrevCode}::{this.props.goal.title} by {this.props.goal.date}</a>\n      {!this.props.goal.id.includes('uncategorized') && <span className=\"fa fa-trash\"\n        onClick={(e) => {\n          this.props.handleDeleteGoal(this.props.goal.id);\n        }}\n      />}\n      <span className=\"fa fa-edit\"\n        onClick={(e) => {\n          this.props.handleFocusEditGoal(this.props.goal.id);\n        }}\n      />\n      </li>\n    );\n  }\n}\n","import React from 'react'\nimport Goal from './Goal'\n\nexport default class Goals extends React.Component {\n  render(){\n    return (\n      <div>\n        <h2>Go(als)</h2>\n        {this.props.goals.map((o,i) => { return <Goal\n          key={o.id}\n          goal={o}\n          focusedGoal={this.props.focusedGoal}\n          changeFocusedGoal={this.props.changeFocusedGoal}\n          handleDeleteGoal={this.props.handleDeleteGoal}\n          handleFocusEditGoal={this.props.handleFocusEditGoal}\n        />})}\n      </div>\n    );\n  }\n}\n","import * as firebase from 'firebase';\n\nexport const firebaseConfig = {\n  apiKey: \"AIzaSyBf31HB-qBKXnVRON9tXOewa7AP3qmKHe8\",\n  authDomain: \"gobits-5da88.firebaseapp.com\",\n  databaseURL: \"https://gobits-5da88.firebaseio.com\",\n  projectId: \"gobits-5da88\",\n  storageBucket: \"gobits-5da88.appspot.com\",\n  messagingSenderId: \"205969372015\",\n  appId: \"1:205969372015:web:d2ec5bec171a44f9532e9a\",\n  measurementId: \"G-Q6582VGBYH\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.database()\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport {firebase, db, googleAuthProvider}","import React from 'react'\nimport { firebase} from '../firebase/firebase'\n\nconst Header = (props) =>{\n  const handleLogOut = () => {\n    return firebase.auth().signOut();\n  }\n\n  return (\n    <div id=\"header\">\n      <div className=\"header-wrapper\">\n        <p id=\"headliner\">{props.title}</p>\n        <p id=\"tagliner\">{props.subtitle}</p>\n      </div>\n      <div className=\"header-wrapper\">\n        <p id=\"user\">{props.user}</p>\n        <a onClick={handleLogOut}>Log Out</a>\n      </div>\n\n    </div>\n  );\n}\nexport default Header\n","import React from 'react'\n\nimport Task from './Task'\nimport AddTask from './AddTask';\n\n\nexport default class Today extends React.Component {\n\n  render(){\n    const displayTasks = () => {\n      if (this.props.tasks){\n        const tasks = this.props.tasks.map((t, i) => {\n          return(\n\n              <Task\n              key={t.id}\n              task={t}\n              goalId={undefined}\n              handleCheck={this.props.handleCheck}\n              handleDeleteTask={this.props.handleDeleteTask}\n              handleThumbsDown={this.props.handleThumbsDown}\n              handleFocusTask={this.props.handleFocusTask}\n              handleUpdateTask={this.props.handleUpdateTask}\n              display={this.props.display}\n              color={this.props.getTaskColor(t)}\n            />\n\n          );\n      });\n      return tasks\n    }\n  };\n    const className = this.props.current ? \"week-highlighted\" : \"\"\n    return (\n      <div className=\"today\">\n        <p className={className}>{this.props.focusedDate}</p>\n        {displayTasks()}\n        <AddTask\n          goalId={this.props.focusedGoal}\n          handleAddTask={this.props.handleAddTask}\n          display={this.props.display}\n          focusedDate={this.props.focusedDate}\n          goals={this.props.goals}\n          categories={this.props.categories}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react'\n\nexport default class NavBar extends React.Component {\n  handleChangeView = (e) => {\n    const view = e.target.value;\n    this.props.changeView(view)\n  }\n  render(){\n    return (\n      <div className=\"navbar-wrapper\">\n        <button className=\"navbar\" value=\"dashboard\" onClick={this.handleChangeView}>View Dashboard</button>\n        <button className=\"navbar\" value=\"today\" onClick={this.handleChangeView}>View Today</button>\n        <button className=\"navbar\" value=\"week\" onClick={this.handleChangeView}>View Week</button>\n      </div>\n    );\n  }\n}\n","import React from 'react'\nimport moment from 'moment'\n\nexport default class EditTask extends React.Component {\n  state = {\n    error: undefined,\n    selectedCategory: \"uncategorized\",\n    selectedGoal: \"uncategorized-goal\",\n  }\n  componentWillMount(){\n    const goalid = this.props.editTask.goal\n    this.setState((prevState) => {\n      return {\n        selectedCategory: this.getEditTaskCategory(),\n        selectedGoal: goalid\n\n      }\n    });\n  }\n  handleUpdateTask = (e) => {\n    e.preventDefault()\n    const taskId = this.props.editTask.id\n    const defaultDate = this.props.focusedDate || moment().format(\"YYYY-MM-DD\");\n    const date = e.target.elements.date.value;\n    const title = e.target.elements.task.value.trim();\n    const goal = e.target.elements.goals ? e.target.elements.goals.value : this.props.goalId;\n    const error = this.props.handleUpdateTask(taskId, title, date, goal);\n    this.setState(() => {\n      return { error };\n    });\n    if (!error){\n      e.target.elements.task.value = '';\n    };\n    this.props.handleClearFocusedTask()\n  }\n  handleChangeCategory = (e) => {\n    const category = e.target.value;\n    this.setState(() => ({selectedCategory: category}))\n  }\n  handleChangeGoal = (e) => {\n    const category = e.target.value;\n    this.setState(() => ({selectedGoal: category}))\n  }\n  getEditTaskCategory = () => {\n    let defaultGoal = this.props.editTask.goal\n    let taskGoal = this.props.goals.filter((g) => {\n      if (g.id === defaultGoal){\n        return g\n      }\n    });\n    const taskCategory = taskGoal[0].category;\n    return taskCategory;\n  }\n  render(){\n    const displayCategoriesList = () => {\n\n\n      const categories = this.props.categories.map((category) => {\n        return(\n          <option key={category.id} value={category.id}>{category.title}</option>\n        )\n      });\n      return (\n        <div className=\"assign\">\n          <select name=\"categories\" onChange={this.handleChangeCategory} value={this.state.selectedCategory}>\n            {\n              categories.length > 0 ? categories : <option value=\"uncategorized\">Uncategorized</option>\n            }\n          </select>\n          <label className=\"assign__label\">Category</label>\n        </div>\n      )\n\n    }\n    const displayGoalsList = () => {\n\n      const category = this.state.selectedCategory;\n      const goals = this.props.goals.map((goal) => {\n        if (goal.category === category)\n        return(\n         <option key={goal.id} value={goal.id}>{goal.title}</option>\n       )\n      });\n      const defaultGoal = this.props.editTask.goal\n      return (\n        <div className=\"assign\">\n\n          <select name=\"goals\" onChange={this.handleChangeGoal} value={this.state.selectedGoal}>\n            {\n              goals.length > 0 ? goals : <option value=\"uncategorized-goal\">Uncategorized</option>\n            }\n\n          </select>\n          <label className=\"assign__label\">Goal</label>\n        </div>\n      )\n\n    }\n    return (\n      <div>\n        {this.state.error && <p>{this.state.error}</p>}\n      <form onSubmit={this.handleUpdateTask}>\n        <input type=\"text\" name=\"task\" defaultValue={this.props.editTask.title}/>\n        <input type=\"date\" name=\"date\" defaultValue={this.props.editTask.date}/>\n        {displayCategoriesList()}\n        {displayGoalsList()}\n        <button><span className=\"fa fa-plus\"/>Update</button>\n      </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Modal from 'react-modal';\nimport EditTask from './EditTask'\n\nconst EditTaskModal = (props) => (\n    <Modal\n      isOpen={!!props.focusedTask}\n      contentLabel=\"Selected Option\"\n      onRequestClose={props.handleClearFocusedTask}\n      closeTimeoutMS={500}\n      //className=\"modal\"\n      >\n        <div>\n      <h3 className=\"modal__title\">{props.editTask ? props.editTask.title : \"No selected Task\"}</h3>\n      <button className=\"button\" onClick={props.handleClearFocusedTask}>Cancel</button>\n      {props.editTask &&\n      <EditTask\n        goalId={props.focusedGoal}\n        editTask={props.editTask}\n        handleUpdateTask={props.handleUpdateTask}\n        display={props.display}\n        focusedDate={props.focusedDate}\n        goals={props.goals}\n        categories={props.categories}\n        handleClearFocusedTask={props.handleClearFocusedTask}\n      />}\n    </div>\n\n    </Modal>\n  );\n\n\nexport default EditTaskModal\n","import React from 'react'\nimport moment from 'moment'\n\nexport default class EditTask extends React.Component {\n  state = {\n    error: undefined,\n    selectedCategory: \"uncategorized\",\n    selectedGoal: \"uncategorized-goal\",\n  }\n  componentWillMount(){\n    const categoryId = this.props.focusedEditGoal.category;\n    this.setState((prevState) => {\n      return {\n        selectedCategory: categoryId\n      }\n    });\n  }\n  handleUpdateFocusedEditGoal = (e) => {\n    e.preventDefault();\n    const goalId = this.props.focusedEditGoal.id\n    const defaultDate = this.props.focusedDate || moment().format(\"YYYY-MM-DD\");\n    const date = e.target.elements.date.value;\n    const title = e.target.elements.title.value.trim();\n    const color = e.target.elements.color.value.trim();\n    const abbrevCode = e.target.elements.abbrevCode.value.trim();\n    const category = e.target.elements.categories ? e.target.elements.categories.value : this.props.categoryId;\n    console.log(category);\n    const error = this.props.handleUpdateFocusedEditGoal(goalId, title, date, category, color, abbrevCode);\n    this.setState(() => {\n      return { error };\n    });\n    if (!error){\n      this.props.handleClearFocusedEditGoal()\n    };\n\n  }\n  handleChangeCategory = (e) => {\n    const category = e.target.value;\n    this.setState(() => ({selectedCategory: category}))\n  }\n  render(){\n    const displayCategoriesList = () => {\n      const categories = this.props.categories.map((category) => {\n        return(\n          <option key={category.id} value={category.id}>{category.title}</option>\n        )\n      });\n      return (\n        <div className=\"assign\">\n          <select name=\"categories\" onChange={this.handleChangeCategory} value={this.state.selectedCategory}>\n            {\n              categories.length > 0 ? categories : <option value=\"uncategorized\">Uncategorized</option>\n            }\n          </select>\n          <label className=\"assign__label\">Category</label>\n        </div>\n      )\n\n    }\n    return (\n      <div>\n        {this.state.error && <p>{this.state.error}</p>}\n        <form onSubmit={this.handleUpdateFocusedEditGoal}>\n        <input type=\"text\" name=\"title\" defaultValue={this.props.focusedEditGoal.title}/>\n        <input type=\"date\" name=\"date\" defaultValue={this.props.focusedEditGoal.date}/>\n        <input type=\"text\" name=\"color\" defaultValue={this.props.focusedEditGoal.color}/>\n        <input type=\"text\" name=\"abbrevCode\" defaultValue={this.props.focusedEditGoal.abbrevCode}/>\n        {displayCategoriesList()}\n        <button><span className=\"fa fa-plus\"/>Update</button>\n      </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Modal from 'react-modal';\nimport EditGoal from './EditGoal'\n\nconst EditGoalModal = (props) => (\n    <Modal\n      isOpen={!!props.focusedEditGoal}\n      contentLabel=\"Selected Option\"\n      onRequestClose={props.handleClearFocusedEditGoal}\n      closeTimeoutMS={500}\n      //className=\"modal\"\n      >\n        <div>\n      <h3 className=\"modal__title\">{props.focusedEditGoal ? props.focusedEditGoal.title : \"No selected Goal\"}</h3>\n      <button className=\"button\" onClick={props.handleClearFocusedEditGoal}>Cancel</button>\n      {props.focusedEditGoal &&\n      <EditGoal\n        categoryId={props.focusedCategory}\n        focusedEditGoal={props.focusedEditGoal}\n        handleUpdateFocusedEditGoal={props.handleUpdateFocusedEditGoal}\n        display={props.display}\n        focusedDate={props.focusedDate}\n        categories={props.categories}\n        handleClearFocusedEditGoal={props.handleClearFocusedEditGoal}\n      />}\n    </div>\n\n    </Modal>\n  );\n\n\nexport default EditGoalModal\n","import React from 'react'\nimport moment from 'moment'\n\nexport default class TodayNav extends React.Component {\n  handleChangeFocusDate = (e) => {\n    e.preventDefault();\n    const date = this.props.focusedDate ? this.props.focusedDate : moment();\n    this.props.handleChangeFocusDate(moment(date).add(1, \"d\").format(\"YYYY-MM-DD\"));\n  };\n  handleTodayDate = (e) => {\n    e.preventDefault();\n    this.props.handleChangeFocusDate(moment().format(\"YYYY-MM-DD\"));\n  };\n  handleNextDate = (e) => {\n    e.preventDefault();\n    const date = this.props.focusedDate ? this.props.focusedDate : moment();\n    this.props.handleChangeFocusDate(moment(date).add(1, \"d\").format(\"YYYY-MM-DD\"));\n  };\n  handlePreviousDate = (e) => {\n    e.preventDefault();\n    const date = this.props.focusedDate ? this.props.focusedDate : moment();\n    this.props.handleChangeFocusDate(moment(date).subtract(1, \"d\").format(\"YYYY-MM-DD\"));\n  };\n  handleChangeGoalsFilter = (e) => {\n    e.preventDefault();\n    let goal = e.target.value;\n    if (goal === \"all\"){\n      goal = undefined\n    }\n\n    this.props.changeFocusedGoal(goal);\n  };\n  render(){\n    const goals = this.props.goals.map((goal) => {\n      const categoryTitle = this.props.categories.filter(c => c.id === goal.category)[0].title\n      return(\n        <option key={goal.id} value={goal.id}>{categoryTitle} - {goal.abbrevCode}::{goal.title}</option>\n      )\n    });\n    return(\n      <div>\n        <h2><a onClick={this.handlePreviousDate}>Previous</a> | <a onClick={this.handleNextDate}>Next</a> | <a onClick={this.handleTodayDate}>Today</a> </h2>\n        <div className=\"goal-filter\">\n          <select name=\"goals\" onChange={this.handleChangeGoalsFilter} defaultValue={this.props.focusedGoal}>\n            <option key=\"all\" value=\"all\">All</option>\n            {goals}\n          </select>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport Today from './Today';\nimport AddTask from './AddTask';\nimport TodayNav from './TodayNav';\nimport moment from 'moment'\n\nexport default class Week extends React.Component {\n  filteredTodaysTasks = (date, tasks) => {\n    if (!date){\n      date = \"\"\n    }\n    const todaysTasks = tasks.filter((t,i) => {\n      if (t.date === date){\n        return t\n        }\n      });\n    return todaysTasks;\n  };\n  // handleChangeGoalsFilter = (goalid, tasks) => {\n  //   const filteredTasks = tasks.filter((t,i) => {\n  //     if (goalid === undefined){\n  //       return t\n  //     }\n  //     else if (t.goal === goalid){\n  //       return t\n  //       }\n  //     });\n  //   return filteredTasks;\n  // }\n  render(){\n    const displayTodays = () => {\n      let dayComponents = [];\n      let i;\n      for (i=0; i < 3; i++){\n        let currentDate = moment(this.props.focusedDate).add(i-3, \"days\").format(\"YYYY-MM-DD\");\n        dayComponents.push(\n          <Today key={i}\n            tasks={this.props.handleChangeGoalsFilter(this.props.focusedGoal, this.filteredTodaysTasks(currentDate, this.props.tasks))}\n            goalId={this.props.focusedGoal}\n            handleCheck={this.props.handleCheck}\n            handleDeleteTask={this.props.handleDeleteTask}\n            handleThumbsDown={this.props.handleThumbsDown}\n            handleChangeFocusDate={this.props.handleChangeFocusDate}\n            focusedDate={currentDate}\n            handleFocusTask={this.props.handleFocusTask}\n            handleAddTask={this.props.handleAddTask}\n            handleUpdateTask={this.props.handleUpdateTask}\n            display={this.props.display}\n            goals={this.props.goals}\n            categories={this.props.categories}\n            getTaskColor={this.props.getTaskColor}\n          />\n        )\n      }\n      dayComponents.push(\n        <Today key=\"today\"\n          tasks={this.props.handleChangeGoalsFilter(this.props.focusedGoal, this.filteredTodaysTasks(this.props.focusedDate, this.props.tasks))}\n          goalId={this.props.focusedGoal}\n          handleCheck={this.props.handleCheck}\n          handleDeleteTask={this.props.handleDeleteTask}\n          handleThumbsDown={this.props.handleThumbsDown}\n          handleChangeFocusDate={this.props.handleChangeFocusDate}\n          focusedDate={this.props.focusedDate}\n          handleFocusTask={this.props.handleFocusTask}\n          handleUpdateTask={this.props.handleUpdateTask}\n          current={true}\n          handleAddTask={this.props.handleAddTask}\n          display={this.props.display}\n          goals={this.props.goals}\n          categories={this.props.categories}\n          getTaskColor={this.props.getTaskColor}\n        />\n      )\n      i = 4\n      for (i=4; i < 7; i++){\n        let currentDate = moment(this.props.focusedDate).add(i-3, \"days\").format(\"YYYY-MM-DD\");\n        dayComponents.push(\n          <Today key={i}\n            tasks={this.props.handleChangeGoalsFilter(this.props.focusedGoal, this.filteredTodaysTasks(currentDate, this.props.tasks))}\n            goalId={this.props.focusedGoal}\n            handleCheck={this.props.handleCheck}\n            handleDeleteTask={this.props.handleDeleteTask}\n            handleThumbsDown={this.props.handleThumbsDown}\n            handleChangeFocusDate={this.props.handleChangeFocusDate}\n            focusedDate={currentDate}\n            handleFocusTask={this.props.handleFocusTask}\n            handleAddTask={this.props.handleAddTask}\n            display={this.props.display}\n            goals={this.props.goals}\n            categories={this.props.categories}\n            getTaskColor={this.props.getTaskColor}\n          />\n        )\n      }\n      dayComponents.push(\n        <Today key=\"uncategorized\"\n          tasks={this.props.handleChangeGoalsFilter(this.props.focusedGoal, this.filteredTodaysTasks(\"\", this.props.tasks))}\n          goalId={this.props.focusedGoal}\n          handleCheck={this.props.handleCheck}\n          handleDeleteTask={this.props.handleDeleteTask}\n          handleThumbsDown={this.props.handleThumbsDown}\n          handleChangeFocusDate={this.props.handleChangeFocusDate}\n          focusedDate={\"\"}\n          handleFocusTask={this.props.handleFocusTask}\n          handleUpdateTask={this.props.handleUpdateTask}\n          handleAddTask={this.props.handleAddTask}\n          display={this.props.display}\n          goals={this.props.goals}\n          categories={this.props.categories}\n          getTaskColor={this.props.getTaskColor}\n        />\n      )\n      return dayComponents\n\n    }\n    return (\n      <div className=\"week\">\n        <div className=\"week-header-wrapper\">\n        <h2>Week</h2>\n          <TodayNav\n            focusedDate={this.props.focusedDate}\n            handleChangeFocusDate={this.props.handleChangeFocusDate}\n            goals={this.props.goals}\n            categories={this.props.categories}\n            changeFocusedGoal={this.props.changeFocusedGoal}\n            focusedGoal={this.props.focusedGoal}\n          />\n        </div>\n        <div className=\"week-wrapper\">\n        {displayTodays()}\n        </div>\n\n\n      </div>\n    )\n  }\n};\n","import React from 'react'\n\nconst ImportExport = (props) =>{\n  const handleFileImport = (e) => {\n    var reader = new FileReader();\n\n    reader.readAsText(e.target.files[0]);\n\n    // define callback function; aka actions to be peerformed after file is read\n    reader.onload = function(e) {\n      var text = reader.result;\n      props.handleImportState(text)\n    }\n\n\n  }\n  const packageData = () =>\n   {\n    const data = JSON.stringify(props.currentState, null, 2);\n    const dataLink = \"data:application/json;charset=utf-8,\" + encodeURI(data)\n    return dataLink\n  }\n  const downloadTitle = () =>\n   {\n    const title = \"GobitsState-\" + new Date().toISOString().slice(0, 10)\n    return title\n  }\n  return (\n    <div>\n      <a href={packageData()} download={downloadTitle()}>Download State</a> |\n      Import State <input type=\"file\" id=\"files\" name=\"files[]\" onChange={handleFileImport}/>\n    </div>\n  );\n}\n\nexport default ImportExport\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport moment from 'moment'\nimport uuidv4 from 'uuid/v4'\n\nimport Gold from './Gold'\nimport User from './User'\nimport AddTask from './AddTask'\nimport Tasks from './Tasks'\nimport AddCategory from './AddCategory'\nimport Categories from './Categories'\nimport AddGoal from './AddGoal'\nimport Goals from './Goals'\nimport Header from './Header'\nimport Today from './Today'\nimport NavBar from './NavBar'\nimport EditTaskModal from './EditTaskModal'\nimport EditGoalModal from './EditGoalModal'\nimport Week from './Week'\nimport TodayNav from './TodayNav'\nimport ImportExport from './ImportExport'\nimport { firebase, db } from '../firebase/firebase'\n\n\n\n\nexport default class GoBitsApp extends React.Component {\n  constructor(props){\n    super(props)\n    this.handleCheck = this.handleCheck.bind(this)\n  \n    const emptyState = {\n    subtitle: \"Get your life together\",\n    display: \"today\",\n    focusedDate: undefined,\n    messages: [\n      \"Get your life together\",\n      \"Aren't you better than this?\",\n      \"Seriously, Aren't you better than this?\",\n      \"Life really isn't that hard; why are you having so much trouble\",\n      \"Other people don't need a to do list; they just do stuff\",\n      \"Get it together!\",\n      \"Stopping making to do lists and just do your work!\",\n      \"Why are you have so much trouble getting stuff done it?\",\n    ],\n    focusedTask: undefined,\n    focusedGoal: undefined,\n    focusedEditGoal: undefined,\n    focusedCategory: undefined,\n    categories: [\n      {\n        id: \"uncategorized\",\n        title: \"Uncategorized\"\n      }\n    ],\n    goals: [\n      {\n        id: \"uncategorized-goal\",\n        title: \"Uncategorized\",\n        category: \"uncategorized\"\n      }\n    ],\n    tasks: [],\n    user: {\n      name: \"Jeffrey C. Witt\",\n      email: \"johndoe@example.com\"\n    },\n    goldAmount: 0\n    }\n    this.state = emptyState;\n  }\n\n  setSubtitle = () => {\n    const randomNum = Math.floor(Math.random() * this.state.messages.length)\n    const message = this.state.messages[randomNum];\n    this.setState(() => {\n      return {\n        subtitle: message\n      }\n    });\n\n\n  };\n  changeFocusedGoal = (index) => {\n    this.setState(() => {\n      return {\n        focusedGoal: index\n      }\n    });\n    this.setSubtitle();\n  };\n  changeFocusedCategory = (index) => {\n    this.setState(() => {\n      return {\n        focusedCategory: index,\n        focusedGoal: undefined\n      }\n    });\n    this.setSubtitle();\n  };\n  handleAddGoal = (goal, date, category) => {\n    if (!goal) {\n      return 'Enter valid value to add item';\n    }\n    this.setState((prevState) => {\n      const goalId = uuidv4();\n      return {\n        goals: prevState.goals.concat(\n          {\n            id: goalId,\n            title: goal,\n            category: category,\n            date: date,\n            completedAt: false,\n            createdAt: moment().format(),\n            color: undefined,\n            abbrevCode: undefined\n          }\n        ),\n        goldAmount: prevState.goldAmount + 1,\n        focusedGoal: goalId\n      }\n    });\n    this.setSubtitle();\n  };\n  handleAddCategory = (category) => {\n    if (!category) {\n      return 'Enter valid value to add item';\n    }\n    this.setState((prevState) => {\n      const categoryId = uuidv4();\n      return {\n        categories: prevState.categories.concat(\n          {\n            id: categoryId,\n            title: category,\n            createdAt: moment().format()\n          }\n        ),\n        goals: prevState.goals.concat(\n          {\n            id: \"uncategorized-\" + uuidv4(),\n            title: \"Uncategorized\",\n            category: categoryId,\n            createdAt: moment().format(),\n            color: \"black\",\n            abbrevCode: undefined\n          }\n        ),\n        goldAmount: prevState.goldAmount + 1,\n        focusedCategory: categoryId,\n        focusedGoal: undefined\n      }\n    });\n    this.setSubtitle();\n  };\n  handleAddTask = (task, date, goalId, category) => {\n\n    if (!task) {\n      return 'Enter valid value to add item';\n    }\n    if (task.includes(\"::\")) {\n      const abbrevCode = task.split(\"::\")[0]\n      task = task.split(\"::\")[1]\n      goalId = this.state.goals.filter(g => g.abbrevCode === abbrevCode)[0].id\n    }\n\n\n    if (!goalId) {\n      goalId = \"uncategorized-goal\"\n    }\n    if (date === \"today\") {\n      date = moment().format(\"YYYY-MM-DD\")\n    }\n    if (date === undefined) {\n      date = \"\"\n    }\n    this.setState((prevState) => {\n      //const updatedTasks = prevState.goals.filter(g => g.id === goalIndex)[0].tasks.concat({title: task, date: date, completed: false})\n      return {\n        tasks: prevState.tasks.concat(\n          {\n            id: uuidv4(),\n            title: task,\n            date: date,\n            completedAt: false,\n            createdAt: moment().format(),\n            rejectedCount: 0,\n            goal: goalId\n          }\n        ),\n        goldAmount: prevState.goldAmount + 1,\n      }\n    });\n    this.setSubtitle();\n  };\n  handleUpdateTask = (taskId, title, date, goalId) => {\n    if (!taskId) {\n      return 'Enter valid value to add item';\n    }\n    if (!goalId) {\n      goalId = \"uncategorized-goal\"\n    }\n    if (date === \"today\") {\n      date = moment().format(\"YYYY-MM-DD\")\n    }\n    this.setState((prevState) => {\n      //const updatedTasks = prevState.goals.filter(g => g.id === goalIndex)[0].tasks.concat({title: task, date: date, completed: false})\n      let prevStateCopy = prevState\n      prevStateCopy.tasks.filter(t => t.id === taskId)[0].title = title;\n      prevStateCopy.tasks.filter(t => t.id === taskId)[0].date = date;\n      prevStateCopy.tasks.filter(t => t.id === taskId)[0].goal = goalId;\n\n      return {\n        tasks: prevStateCopy.tasks,\n        goldAmount: prevState.goldAmount + 1,\n      }\n    });\n    this.setSubtitle();\n  };\n  handleUpdateFocusedEditGoal = (goalId, title, date, category, color, abbrevCode) => {\n    //check if abbrev code has already been used\n    let x = undefined\n    this.state.goals.forEach((g) => {\n      if (g.abbrevCode === abbrevCode) {\n        x = \"This abbrev code has already been used\";\n      }\n    });\n    //get current goal abbrev code to allow resubmission identical abbrev code for this goal\n    const currentGoalAbbrevCode = this.state.goals.filter(g => g.id === goalId)[0].abbrevCode;\n    if (currentGoalAbbrevCode !== abbrevCode && x) {\n      return x\n    }\n\n    this.setState((prevState) => {\n      let prevStateCopy = prevState;\n\n\n      let updatingGoal = prevStateCopy.goals.filter(g => g.id === goalId)[0]\n      updatingGoal.title = title;\n      updatingGoal.date = date;\n      updatingGoal.category = category;\n      updatingGoal.color = color;\n      updatingGoal.abbrevCode = abbrevCode;\n      return {\n        goals: prevStateCopy.goals\n      }\n    });\n\n  }\n\n  setGoalStatus = (goal) => {\n    //start with assumption that goal is completed\n    let goalStatus = moment().format();\n    let goalsPerTask = 0;\n    // check to see if there are any completed tasks for this goal\n    this.state.tasks.forEach((t) => {\n      if (t.goal === goal.id) {\n        goalsPerTask++;\n        if (t.completedAt === false) {\n          goalStatus = false;\n        }\n      }\n    });\n    //check to see if there are any tasks for this goal\n    if (goalsPerTask === 0) {\n      goalStatus = false\n    }\n    return goalStatus\n  };\n  //alias: handle complete/uncomplete task\n  handleCheck = (taskId, goalId) => {\n    // not a pure function needs to be fixed\n    this.setState((prevState) => {\n      if (!goalId) {\n        goalId = prevState.tasks.filter(t => t.id === taskId)[0].goal\n      }\n      const currentValue = prevState.tasks.filter(t => t.id === taskId)[0].completedAt\n      const taskDate = prevState.tasks.filter(t => t.id === taskId)[0].date\n      const prevStateCopy = prevState\n\n      //toggle task from uncompleted to completed or vice versa\n      prevStateCopy.tasks.filter(t => t.id === taskId)[0].completedAt = !currentValue ? moment().format() : false;\n      // check if there is a due date attached to this item\n      // if there is NOT, then if the task is being completed,\n      // then assign it to today's date\n      prevStateCopy.tasks.filter(t => t.id === taskId)[0].date = (!taskDate && !currentValue) ? moment().format(\"YYYY-MM-DD\") : taskDate;\n      const goalStatus = this.setGoalStatus(prevStateCopy.goals.filter(g => g.id === goalId)[0]);\n      prevStateCopy.goals.filter(g => g.id === goalId)[0].completedAt = goalStatus;\n      \n      return {\n        goals: prevStateCopy.goals,\n        tasks: prevStateCopy.tasks,\n        goldAmount: prevState.goldAmount + 1\n      }\n    });\n    this.setSubtitle();\n  };\n\n  // findGoalIndexFromTask = (taskId, prevState) => {\n  //   let goalId = prevState.goals.filter((g) =>{\n  //     let goalid = \"\";\n  //     g.tasks.forEach((t) => {\n  //       if (t.id === taskIndex){\n  //         console.log(g)\n  //         goalid = g.id\n  //       }\n  //     });\n  //     return goalid\n  //   });\n  //   goalIndex = goalIndex[0].id\n  //   console.log(goalIndex);\n  //   return goalIndex;\n  // }\n\n  handleThumbsDown = (taskId, goalId) => {\n    this.setState((prevState) => {\n      if (!goalId) {\n        goalId = prevState.tasks.filter(t => t.id === taskId)[0].goal;\n      }\n\n      const currentValue = prevState.tasks.filter(t => t.id === taskId)[0].rejectedCount;\n      const prevStateCopy = prevState;\n      prevStateCopy.tasks.filter(t => t.id === taskId)[0].rejectedCount = currentValue + 1;\n\n      const goalStatus = this.setGoalStatus(prevStateCopy.goals.filter(g => g.id === goalId)[0]);\n      prevStateCopy.goals.filter(g => g.id === goalId)[0].completedAt = goalStatus;\n\n      return {\n        goals: prevStateCopy.goals,\n        tasks: prevStateCopy.tasks,\n        goldAmount: prevState.goldAmount + 1\n      }\n    });\n    this.setSubtitle();\n  };\n  handleDeleteTask = (taskId, goalId) => {\n    this.setState((prevState) => {\n      if (!goalId) {\n        goalId = prevState.tasks.filter(t => t.id === taskId)[0].goal;\n      }\n      const prevStateCopy = prevState\n      let taskDeleteIndex = prevStateCopy.tasks.findIndex((t, i) => {\n        if (t.id === taskId) {\n          return true\n        }\n      });\n      prevStateCopy.tasks.splice(taskDeleteIndex, 1);\n      // set goal status\n\n      const goalStatus = this.setGoalStatus(prevStateCopy.goals.filter(g => g.id === goalId)[0])\n      prevStateCopy.goals.filter(g => g.id === goalId)[0].completedAt = goalStatus;\n\n      return {\n        goals: prevStateCopy.goals,\n        tasks: prevStateCopy.tasks,\n        goldAmount: prevState.goldAmount + 1\n\n      }\n    });\n    this.setSubtitle();\n  };\n  handleDeleteGoal = (goalId) => {\n\n    if (this.state.focusedGoal === goalId) {\n      this.setState(() => {\n        return {\n          focusedGoal: undefined\n        }\n      });\n    }\n\n    this.setState((prevState) => {\n      const prevStateCopy = prevState;\n\n      let goalDeleteIndex = prevStateCopy.goals.findIndex((g, i) => {\n        if (g.id === goalId) {\n          return true\n        }\n      });\n\n      prevStateCopy.tasks.forEach((t) => {\n        if (t.goal === goalId)\n          t.goal = \"uncategorized-goal\"\n      });\n\n      prevStateCopy.goals.splice(goalDeleteIndex, 1);\n      return {\n        tasks: prevStateCopy.tasks,\n        goals: prevStateCopy.goals,\n        goldAmount: prevState.goldAmount + 1\n      }\n    });\n    this.setSubtitle();\n\n  };\n  handleDeleteCategory = (categoryId) => {\n\n    if (this.state.focusedCategory === categoryId) {\n      this.setState(() => {\n        return {\n          focusedCategory: \"uncategorized\"\n        }\n      });\n    }\n\n    this.setState((prevState) => {\n\n      const prevStateCopy = prevState\n      let categoryDeleteIndex = prevStateCopy.categories.findIndex((c, i) => {\n        if (c.id === categoryId) {\n          return true\n        }\n      });\n      prevStateCopy.categories.splice(categoryDeleteIndex, 1);\n\n      prevStateCopy.goals.forEach((g) => {\n        // change category of goals to uncategorized\n        if (g.category === categoryId) {\n          g.category = \"uncategorized\";\n        }\n        // remove uncategorized goal for the category to be deleted\n        else if (g.category.includes(\"uncategorized\")) {\n          let goalDeleteIndex = prevStateCopy.goals.findIndex((g2, i) => {\n            if (g2.id === g.id) {\n              return true\n            }\n          });\n          prevStateCopy.goals.splice(goalDeleteIndex, 1);\n        }\n\n      });\n      return {\n        categories: prevStateCopy.categories,\n        goals: prevStateCopy.goals,\n        goldAmount: prevState.goldAmount + 1\n      }\n    });\n    this.setSubtitle();\n  };\n\n  handleClearFocusedTask = () => {\n    this.setState(() => {\n      return {\n        focusedTask: undefined\n      }\n    });\n  };\n  handleClearFocusedEditGoal = () => {\n    this.setState(() => {\n      return {\n        focusedEditGoal: undefined\n      }\n    });\n  };\n  handleFocusTask = (taskId) => {\n    this.setState(() => {\n      return {\n        focusedTask: taskId\n      }\n    });\n  };\n  handleFocusEditGoal = (goalId) => {\n\n    this.setState(() => {\n      return {\n        focusedEditGoal: goalId\n      }\n    });\n  };\n\n  filteredGoals = () => {\n    if (this.state.focusedCategory) {\n      const newGoals = this.state.goals.filter((g, i) => {\n        if (g.category === this.state.focusedCategory) {\n          return g\n        }\n      });\n      return newGoals\n    }\n    else {\n      return this.state.goals\n    }\n  };\n  filteredTasks = () => {\n    if (this.state.focusedGoal) {\n      const tasks = this.state.tasks.filter((t, i) => {\n        if (t.goal === this.state.focusedGoal) {\n          return t\n        }\n      });\n      return tasks;\n    }\n    else {\n      return this.state.tasks;\n    }\n  };\n  handleChangeGoalsFilter = (goalid, tasks) => {\n    const filteredTasks = tasks.filter((t, i) => {\n      if (goalid === undefined) {\n        return t\n      }\n      else if (t.goal === goalid) {\n        return t\n      }\n    });\n    return filteredTasks;\n  }\n  filteredTodaysTasks = (date) => {\n    if (!date) {\n      date = moment().format(\"YYYY-MM-DD\")\n    }\n\n    const todaysTasks = this.state.tasks.filter((t, i) => {\n      if (t.date === date) {\n        return t\n      }\n    });\n    return todaysTasks;\n  };\n  getTaskColor = (task) => {\n    const goalid = task.goal\n    const goal = this.state.goals.filter((g, i) => {\n      if (g.id === goalid) {\n        return g\n      }\n    });\n    try {\n      const color = goal[0].color\n      return color\n    }\n    catch (err) {\n      const color = undefined\n      return color\n    }\n  }\n  displayTasks = () => {\n    if (this.state.focusedGoal) {\n      return (\n        <div>\n          <Tasks\n            tasks={this.filteredTasks()}\n            goalId={this.state.focusedGoal}\n            handleCheck={this.handleCheck}\n            handleDeleteTask={this.handleDeleteTask}\n            handleThumbsDown={this.handleThumbsDown}\n            handleFocusTask={this.handleFocusTask}\n            handleUpdateTask={this.handleUpdateTask}\n            display={this.state.display}\n            getTaskColor={this.getTaskColor}\n          />\n          <AddTask\n            goalId={this.state.focusedGoal} handleAddTask={this.handleAddTask} />\n        </div>\n      )\n    }\n  };\n  displayGoals = () => {\n    if (this.state.focusedCategory) {\n      return (\n        <div>\n          <Goals\n            goals={this.filteredGoals()}\n            focusedGoal={this.state.focusedGoal}\n            category={this.state.focusedCategory}\n            changeFocusedGoal={this.changeFocusedGoal}\n            handleDeleteGoal={this.handleDeleteGoal}\n            handleFocusEditGoal={this.handleFocusEditGoal}\n          />\n\n          <AddGoal\n            category={this.state.focusedCategory}\n            handleAddGoal={this.handleAddGoal} />\n        </div>\n      )\n    }\n  };\n  displayDashboard = () => {\n    return (\n      <div className=\"dashboard row\">\n        <div className=\"col-sm-4\">\n          <Categories\n            focusedCategory={this.state.focusedCategory}\n            categories={this.state.categories}\n            changeFocusedCategory={this.changeFocusedCategory}\n            handleDeleteCategory={this.handleDeleteCategory} />\n          <AddCategory\n            handleAddCategory={this.handleAddCategory} />\n        </div>\n        <div className=\"col-sm-4\">\n          {this.displayGoals()}\n        </div>\n        <div className=\"col-sm-4\">\n          {this.displayTasks()}\n        </div>\n      </div>\n    )\n  };\n  handleChangeFocusDate = (date) => {\n    this.setState(() => {\n      return { focusedDate: date }\n    });\n  };\n\n  displayWeek = () => {\n    return (\n      <Week\n        tasks={this.state.tasks}\n        goalId={this.state.focusedGoal}\n        handleCheck={this.handleCheck}\n        handleDeleteTask={this.handleDeleteTask}\n        handleThumbsDown={this.handleThumbsDown}\n        handleChangeFocusDate={this.handleChangeFocusDate}\n        handleUpdateTask={this.handleUpdateTask}\n        focusedDate={this.state.focusedDate}\n        handleFocusTask={this.handleFocusTask}\n        handleAddTask={this.handleAddTask}\n        display={this.state.display}\n        goals={this.state.goals}\n        categories={this.state.categories}\n        getTaskColor={this.getTaskColor}\n        focusedGoal={this.state.focusedGoal}\n        changeFocusedGoal={this.changeFocusedGoal}\n        handleChangeGoalsFilter={this.handleChangeGoalsFilter}\n      />\n    )\n  }\n\n  displayToday = (date) => {\n    return (\n      <div className=\"today-wrapper\">\n        <h2>Today</h2>\n        <TodayNav\n          focusedDate={this.state.focusedDate}\n          handleChangeFocusDate={this.handleChangeFocusDate}\n          goals={this.state.goals}\n          categories={this.state.categories}\n          changeFocusedGoal={this.changeFocusedGoal}\n          focusedGoal={this.state.focusedGoal}\n        />\n        <Today\n          tasks={this.handleChangeGoalsFilter(this.state.focusedGoal, this.filteredTodaysTasks(this.state.focusedDate))}\n          goalId={this.state.focusedGoal}\n          handleCheck={this.handleCheck}\n          handleDeleteTask={this.handleDeleteTask}\n          handleThumbsDown={this.handleThumbsDown}\n          handleUpdateTask={this.handleUpdateTask}\n          focusedDate={this.state.focusedDate}\n          handleFocusTask={this.handleFocusTask}\n          handleAddTask={this.handleAddTask}\n          display={this.state.display}\n          goals={this.state.goals}\n          categories={this.state.categories}\n          getTaskColor={this.getTaskColor}\n        />\n      </div>\n    )\n  };\n  handleChangeView = (view) => {\n    this.setState(() => {\n      return { display: view, focusedDate: moment().format(\"YYYY-MM-DD\") }\n    });\n  };\n  componentDidMount() {\n    if (this.props.user){\n      db.ref(this.props.user.uid)\n      .once('value')\n      .then((snapshot) => {\n        const state = snapshot.val()\n        if (state) {\n\n          this.setState(() => (state));\n        }\n      })\n      .catch((e) => {\n        console.log(\"error\", e)\n        // try to load data from local storage\n        // try {\n        //   const state = JSON.parse(localStorage.getItem(\"gobitsState\"));\n        //   //only load state if state is not empty\n        //   if (state) {\n        //     this.setState(() => (state));\n        //   }\n        // }\n        // if local storage fails do nothing and proceed with the default state\n        // catch (e) {\n\n        // }\n      })\n    }\n  }\n  componentDidUpdate() {\n    \n    if (this.props.user){\n    // save to database\n    if (db && this.state) {\n      db.ref(this.props.user.uid).set(\n        JSON.parse(JSON.stringify(this.state)),\n      )\n    }\n    // save to local storage as backup\n    //localStorage.setItem(\"gobitsState\", JSON.stringify(this.state))\n  }\n  }\n  handleImportState = (text) => {\n    // try to load data from local storage\n    try {\n      const state = JSON.parse(text);\n      //only load state if state is not empty\n      if (state) {\n        this.setState(() => (state));\n      }\n    }\n    // if import update fails do nothing and proceed with the default state\n    catch (e) {\n      console.log(\"error\", e)\n    }\n  }\n  displayCurrentView = () => {\n    if (this.state.display === \"dashboard\") {\n      return this.displayDashboard();\n    }\n    else if (this.state.display === \"week\") {\n      return this.displayWeek();\n    }\n    else {\n      return this.displayToday();\n\n    }\n  }\n  render() {\n    const title = \"Gobits\";\n    console.log(\"state at render\", this.state)\n    return (\n      <div>\n        <Header title={title} subtitle={this.state.subtitle} user={this.props.user && this.props.user.email} />\n\n        <hr />\n        {/* <User user={this.state.user}/> */}\n        <NavBar currentView={this.state.display} changeView={this.handleChangeView} />\n        <hr />\n        {this.displayCurrentView()}\n        <Gold\n          goldAmount={this.state.goldAmount} />\n\n        <EditTaskModal\n          handleClearFocusedTask={this.handleClearFocusedTask}\n          editTask={this.state.tasks.filter(t => t.id === this.state.focusedTask)[0]}\n          focusedTask={this.state.focusedTask}\n          goalId={this.state.focusedGoal}\n          handleUpdateTask={this.handleUpdateTask}\n          display={this.state.display}\n          focusedDate={this.state.focusedDate}\n          goals={this.state.goals}\n          categories={this.state.categories}\n        />\n        <EditGoalModal\n          handleClearFocusedEditGoal={this.handleClearFocusedEditGoal}\n          focusedEditGoal={this.state.goals.filter(g => g.id === this.state.focusedEditGoal)[0]}\n          handleUpdateFocusedEditGoal={this.handleUpdateFocusedEditGoal}\n          display={this.state.display}\n          focusedDate={this.state.focusedDate}\n          categories={this.state.categories}\n        />\n        <ImportExport currentState={this.state} handleImportState={this.handleImportState} />\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { firebase, db, googleAuthProvider } from '../firebase/firebase'\n\n\nexport default class Landing extends React.Component {\n  state = {\n    goals: [\n      \"be a gobit!\",\n      \"run a 10k.\",\n      \"call mom more.\",\n      \"get a promotion.\",\n      \"buy a house.\"\n    ],\n    currentGoalIndex: 0\n  };\n  timer = () => {\n    this.setState({currentGoalIndex: this.getNewIndex()});\n  };\n  getNewIndex = () => {\n    const randomNum = Math.floor(Math.random() * this.state.goals.length)\n    return randomNum\n  };\n  componentDidMount(){\n    \n    var intervalId = setInterval(this.timer, 1000);\n    // store intervalId in the state so it can be accessed later:\n    this.setState({intervalId: intervalId});\n  }\n  componentWillUnmount(){\n    clearInterval(this.state.intervalId);\n  }\n  handleLogin = (e) => {\n    e.preventDefault()\n    return firebase.auth().signInWithPopup(googleAuthProvider);\n  };\n  render(){\n    return (\n        <div className=\"goalBox\">\n          <p>\n            <span className=\"goalStagnant\">my goal is to</span>\n            <span id=\"goalHop\">{this.state.goals[this.state.currentGoalIndex]}</span>\n          </p>\n          <div className=\"center-btn\">\n            <a className=\"lets-gobit-btn\" onClick={this.handleLogin}>login to gobit!</a>\n          </div>\n        </div>\n\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport createHistory from 'history/createHashHistory'\nimport GoBitsApp from './components/GoBitsApp';\nimport Landing from './components/Landing';\nimport {Router, Route} from 'react-router-dom';\n\nexport const history = createHistory();\n\nexport default class App extends React.Component {\n  render(){\n    return(\n      <Router history={history}>\n        <div>\n          <Route path=\"/\" component={Landing} exact={true}/>\n          <Route path=\"/me\" render={(props) => <GoBitsApp {...props} user={this.props.user}/>}  exact={true}/>\n        </div>\n      </Router>\n    \n    )\n  }\n  \n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/styles.scss'\nimport App, {history} from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {firebase} from './firebase/firebase'\n\n\nlet hasRendered = false; \nconst renderApp = (user) => {\n  if (!hasRendered){\n    ReactDOM.render(\n      //<React.StrictMode> // commented out because it is causing setStates to run twice; but this should be a problem if my setState functions were pure functions as they should be; but apparently mine are not: see https://github.com/facebook/react/issues/12856#issuecomment-390206425\n        <App user={user}/>,\n      //</React.StrictMode>\n      document.getElementById('root')\n    );\n    hasRendered = true\n  }\n}\n\nfirebase.auth().onAuthStateChanged((user) => {\n  if (user ){\n    console.log(\"log in\", user)\n    renderApp(user)\n    if (history.location.pathname === '/'){\n      history.push(\"me\")\n    }\n  }\n  else{\n    console.log(\"logged out\")\n    renderApp()\n    history.push(\"/\") \n  }\n  \n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}